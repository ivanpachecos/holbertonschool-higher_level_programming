The ``print_square`` Module
===========================

Using ``print_square``
----------------------

This is an example text file in reStructuredText format. First import
``print_square`` from the ``print_square`` module:

    >>> print_square = __import__('4-print_square').print_square

Now use it:
    """
    Prints a square with the character #.

    Args:
        size (int): The length of the sides of the square.

    Raises:
        TypeError: If size is not an integer.
        ValueError: If size is less than 0.
    """

    >>> print_square(3)
    ###
    ###
    ###

    >>> print_square(1)
    #

    >>> print_square(0)
    

    >>> print_square(4)
    ####
    ####
    ####
    ####

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########


-------------------------------------------------

------------------Error--------------------------

    """
    Raises:
        TypeError: If size is not an integer.
        ValueError: If size is less than 0.
    """

    >>> print_square("3")
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    >>> print_square(-3)
    Traceback (most recent call last):
        ...
    ValueError: size must be >= 0

    >>> print_square(3.5)
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    no -- argument
    >>> print_square()
    Traceback (most recent call last):
        ...
    TypeError: print_square() missing 1 required positional argument: 'size'
